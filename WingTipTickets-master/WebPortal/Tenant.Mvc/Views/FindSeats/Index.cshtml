@model Tenant.Mvc.Models.FindSeatsViewModel

@using Newtonsoft.Json;
@using Tenant.Mvc.Core.Models

@{
    ViewBag.Title = "Find Seats";
}

<div class="container">
    <div class="row">
        <div class="col-xs-12 ">
            <div class="banner">
                <div class="row">
                    <img src="~/Content/img/@WingtipTicketApp.Config.TenantEventType/banner-01.jpg" class="img-responsive" style="width: 100%">
                </div>
                <div class="banner-findseats">
                    <div class="banner-caption"><span class="banner-splitter">@Model.Concert.PerformerName</span> @Model.Concert.ConcertDate.ToString("dddd MMM. dd, yyyy h tt")</div>
                </div>
            </div>
        </div>
    </div>

    <div class="row row-underline-dark">
        <div class="col-xs-12 col-md-12">
            <h2>@Model.Concert.VenueName - @Model.Concert.ConcertName</h2>
            <h3>Performer: @Model.Concert.PerformerName</h3>
        </div>
    </div>

    <!-- -------------------------------------------------------------------------------------------------------------------------- -->
    <!-- Ticket Quantity Section -->
    <!-- -------------------------------------------------------------------------------------------------------------------------- -->

    <div class="row">
        <div class="col-xs-7">
            @using (Html.BeginForm("Index", "FindSeats", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.Concert.ConcertId)

                <div class="form-group">
                    <div class="col-xs-3">
                        <label>Price & Section</label>
                    </div>
                    <div class="col-xs-9">
                        @Html.DropDownListFor(m => m.Concert.SeatSectionId, @Model.SeatSections, new { @class = "form-control" })
                    </div>
                </div>

                <div class="clearfix">
                </div>

                <div class="form-group">
                    <div class="col-xs-3">
                        <label>Select Seats</label>
                    </div>
                    <div class="col-xs-9">
                        <div class="panel panel-default">
                            <div id="seatMap" class="panel-body center-block">
                                No Section Selected
                            </div>
                        </div>
                    </div>
                </div>

                <div class="clearfix">
                </div>
            }
        </div>

        <!-- -------------------------------------------------------------------------------------------------------------------------- -->
        <!-- Venue Data Section -->
        <!-- -------------------------------------------------------------------------------------------------------------------------- -->

        <div id="documentdb-meta-parent" class="col-xs-5">

            <div class="spacer-15">
            </div>

            <div class="panel panel-default">
                <div class="panel-heading" style="padding: 8px;">
                    <div class="row">
                        <div class="col-xs-6">
                            <h4 style="margin: 7px 0 0 0;">Venue Information</h4>
                        </div>
                        <div class="col-xs-6">
                            @if ((Session["SessionUser"] as CustomerModel) != null)
                            {
                                <button id="puchaseTicket" type="button" class="btn btn-themed-secondary pull-right" style="margin-bottom: 0px;">
                                    Purchase tickets
                                </button>
                            }
                            else
                            {
                                <button id="loginUser" type="button" class="btn btn-themed-secondary pull-right" data-toggle="modal" data-target=".bs-example-modal-lg" data-backdrop="static" data-keyboard="false" style="margin-bottom: 0px;">
                                    Sign in to purchase tickets
                                </button>
                            }
                        </div>

                    </div>
                </div>

                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-5">
                            <label class="pull-left">Name</label>
                        </div>
                        <div class="col-xs-7">
                            <label class="pull-right"> @Model.Concert.VenueName</label>
                        </div>
                    </div>

                    @if (Model.VenueMetaData != null)
                    {
                        <div id="documentdb-meta-template" class="row">
                            <div class="col-xs-5">
                                <label class="pull-left documentdb-meta-label"></label>
                            </div>
                            <div class="col-xs-7">
                                <label class="pull-right documentdb-meta-value"></label>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>

        @if (Model.VenueMetaData != null)
        {
            <div class="row">
                <div class="col-xs-12">
                    <input type="button" value="Display JSON &#62;" class="btn btn-themed-secondary pull-right" data-toggle="modal" data-target="#myModal" />
                </div>
            </div>
        }
    </div>
    
    <!-- -------------------------------------------------------------------------------------------------------------------------- -->
    <!-- Venue Map -->
    <!-- -------------------------------------------------------------------------------------------------------------------------- -->
    
    <div class="row">
        
        <div class="clearfix">
        </div>

        <div class="row row-underline-dark">
            <div class="col-xs-12">
                <h3>Venue Seat Map</h3>
            </div>
        </div>

        <div class="col-xs-offset-2 col-xs-8">

            @{
                if (Model.SeatMap != null)
                {
                    Model.SeatMap.EmbedUrl += "&filterPaneEnabled=false&$filter=BookedSeats/ConcertFilterId eq '" + Model.Concert.ConcertId + "'";
                        
                    @Html.PowerBIReportFor(m => m.SeatMap, new { id = "pbi-report", style = "height:85vh", @powerbi_access_token = Model.AccessToken })
                }
                else
                {
                    <text>Report not Found!!!</text>
                }
            }


        </div>

    </div>
</div>

<!-- -------------------------------------------------------------------------------------------------------------------------- -->
<!-- MetaData Dialog -->
<!-- -------------------------------------------------------------------------------------------------------------------------- -->

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                @if (Model.VenueMetaData != null)
                {
                    <pre style="text-align:left">@JsonConvert.SerializeObject(Model.VenueMetaData, Formatting.Indented)</pre>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- -------------------------------------------------------------------------------------------------------------------------- -->
<!-- Ticket Purchase Dialog -->
<!-- -------------------------------------------------------------------------------------------------------------------------- -->

<div id="purchaseTicketModel" class="modal fade modal-tickets" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <div class="row">
                    <div class="col-xs-8">
                        <img src="~/Content/img/@WingtipTicketApp.Config.TenantEventType/ticketmaestro-logo.jpg" class="img-responsive pull-left">
                        <h1 class="logo-heading">@WingtipTicketApp.Config.TenantName.ToLower()</h1>
                    </div>
                    <div class="col-xs-4">
                        <h2 class="sub-heading">
                            Purchase tickets
                            <button type="button" class="btn-close" data-dismiss="modal">
                                <span aria-hidden="true">&times;</span>
                                <span class="sr-only">Close</span>
                            </button>
                        </h2>
                    </div>
                </div>
            </div>

            <div class="modal-body">
                <div class="row clearfix">

                    <div class="col-sm-12 col-md-6 ticket-info">
                        <h3>Ticket Information</h3>

                        <ul>
                            <li>Event: @Model.Concert.ConcertName</li>
                            <li>Venue: @Model.Concert.VenueName</li>
                            <li>Date:  @String.Format("{0:D}", Model.Concert.ConcertDate)</li>
                        </ul>
                        <ul>
                            <li id="liTicketQuantity">Tickets: <span id="spanTicketQty"></span> General Admission</li>
                            <li id="liTicketQuantity"><span id="spanTicketSeats"></span></li>
                            <li id="liPrice">Total Cost: $<span id="spanTotal"></span></li>
                        </ul>
                    </div>

                    <div class="col-sm-12 col-md-6 ticket-info">
                        @using (Html.BeginForm("PurchaseTicketsWithCreditCard", "FindSeats", FormMethod.Post, new { @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(m => m.Purchase.ConcertId)
                            @Html.HiddenFor(m => m.Purchase.Quantity)
                            @Html.HiddenFor(m => m.Purchase.SeatSectionId)
                            @Html.HiddenFor(m => m.Purchase.Seats)

                            <h3>Payment Information</h3>

                            <div class="form-group">
                                <div class="col-xs-12">
                                    @Html.TextBoxFor(m => m.Purchase.CardHolder, new { @class = "form-control", @placeholder = "Name On Card" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-xs-12">
                                    @Html.TextBoxFor(m => m.Purchase.CardNumber, new { @class = "form-control", @placeholder = "Card Number (No Dashes)" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-xs-12">
                                    <label class="subscript hidden-xs">Expiration Date</label>
                                </div>
                                <div class="col-xs-6">
                                    @Html.DropDownListFor(m => m.Purchase.CardExpirationMonth, @Model.ExpirationMonths, new { @class = "form-control", @placeholder = "Month" })
                                </div>
                                <div class="col-xs-6">
                                    @Html.DropDownListFor(m => m.Purchase.CardExpirationYear, @Model.ExpirationYears, new { @class = "form-control", @placeholder = "Year" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-xs-6">
                                    <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Security Code">
                                </div>
                                <div class="col-xs-6">
                                    <button type="submit" id="buyTicketsWithCreditCard" name="buyTicketsWithCreditCard" class="btn btn-themed" style="width: 100%">
                                        Purchase Now
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- -------------------------------------------------------------------------------------------------------------------------- -->
<!-- Script Section -->
<!-- -------------------------------------------------------------------------------------------------------------------------- -->

<script src="~/Content/Scripts/jquery-1.9.1.min.js"></script>

@section Scripts
{
    <script>
    $( document ).ready(function()
    {
        // Setup Filters
       var basicFilter = {
            $schema: "http://powerbi.com/product/schema#basic",
            target: {
                table: 'BookedSeats',
                column: 'ConcertFilterId'
            },
            operator: 'eq',
            values: [@Model.Concert.ConcertId]
        };

        // Model.SeatMap.EmbedUrl += "&filterPaneEnabled=false&$filter=BookedSeats/ConcertFilterId eq '" + Model.Concert.ConcertId + "'";
        // For complete list of embed configuration see the following wiki page
        // https://github.com/Microsoft/PowerBI-JavaScript/wiki/Embed-Configuration-Details
        var reportConfig = {
            settings:
            {
                filterPaneEnabled: false
            },
            //filters: [ basicFilter ]
        };

        var reportElement = document.getElementById('pbi-report');

        // Embed report
        // https://microsoft.github.io/PowerBI-JavaScript/classes/_src_service_.service.html#embed
        var report = powerbi.embed(reportElement, reportConfig);

        // For a complete guide to event handling see the following wiki page
        // https://github.com/Microsoft/PowerBI-JavaScript/wiki/Handling-Events
        report.on('loaded',
            function ()
            {
                //debugger;
                //report.setFilters([basicFilter]);
            });

        $("#puchaseTicket").click(function()
        {
            // Get the values and seat numbers
            var values = getFormValues();
            var seatNumbers = getSeatNumbers(values.selectedSeats, values.ticketQuantity);

            // Set purchase & dialog fields
            setPurchaseFields(values, seatNumbers);
            setDialogFields(values, seatNumbers);

            // Show the modal
            $('#purchaseTicketModel').modal({
                keyboard: false,
                backdrop: 'static',
            });
        });

        // Update the seat map
        updateSeatMap();

        // Seat Section changed
        $("#Concert_SeatSectionId").change(function()
        {
            updateSeatMap();
        });

        function getFormValues()
        {
            var values = {
                concertId: $("#Concert_ConcertId").val(),
                seatSectionId: $("#Concert_SeatSectionId").val(),
                seatSection: $("#Concert_SeatSectionId option:selected").text().split(" - ")[0],
                selectedSeats: $("#seatMap input:checkbox:checked:not(:disabled)"),

                ticketQuantity: $("#seatMap input:checkbox:checked:not(:disabled)").length,
                ticketPrice: $("#Concert_SeatSectionId option:selected").text().split(" - ")[1].replace("$","").replace(",00",""),
                ticketTotal: 0
            };

            values.ticketTotal = values.ticketPrice * values.ticketQuantity;

            return values;
        }

        function getSeatNumbers(selectedSeats, ticketQuantity)
        {
            // Get the seat number
            var seatNumbers = [];

            $(selectedSeats).each(function(index)
            {
                seatNumbers += $(this).attr("data-seatnumber");

                if (index != (ticketQuantity - 1))
                {
                    seatNumbers += ", ";
                }
            });

            return seatNumbers;
        }

        function setPurchaseFields(values, seatNumbers)
        {
            // Set Purchase Fields
            $("#Purchase_ConcertId").val(values.concertId);
            $("#Purchase_SeatSectionId").val(values.seatSectionId);
            $("#Purchase_Quantity").val(values.ticketQuantity);
            $("#Purchase_Seats").val(seatNumbers);
        }

        function setDialogFields(values, seatNumbers)
        {
            // Set Dialog Fields
            $("#spanTicketQty").html(values.ticketQuantity);
            $("#spanTicketSeats").html(values.seatSection + ': Seats ' + seatNumbers);
            $("#spanTotal").html(values.ticketTotal + ".00");
        }

        function updateSeatMap()
        {
            var concertId = $("#Concert_ConcertId").val();
            var ticketLevelId = $("#Concert_SeatSectionId").val();

            $.ajax({
                cache: false,
                type: "GET",
                url: '@Url.Action("GetSeatLayout", "FindSeats")',
                data:
                {
                    concertId: concertId,
                    ticketLevelId: ticketLevelId
                },
                dataType: "json",
                success: function(values)
                {
                    var html = "";
                    var maxColumns = 0;
                    var model = values.model;

                    html = html + "<table style='margin-bottom: 0px; margin-left: auto; margin-right: auto'>";

                    for (var row = model.length - 1; row >= 0; row--)
                    {
                        var currentRow = model[row];

                        html = html + "<tr style='line-height: 10px;'>";

                        var columns = currentRow.EndNumber + 1 - currentRow.StartNumber;

                        if (maxColumns < columns)
                        {
                            maxColumns = columns;
                        }

                        for (var skip = 0; skip < currentRow.SkipCount; skip++)
                        {
                            html = html + "<td style='margin: 2px; padding: 2px;'>";
                            html = html + "</td>";
                        }

                        for (var col = currentRow.StartNumber; col <= currentRow.EndNumber; col++)
                        {
                            var seatSelected = arrayContains(currentRow.SelectedSeats, col);

                            html = html + "<td style='margin: 2px; padding: 2px;'>";

                            if (seatSelected)
                            {
                                html = html + "<input type=checkbox disabled='disabled' checked='true' data-seatNumber='" + col + "'/>";
                            }
                            else
                            {
                                html = html + "<input type=checkbox data-seatNumber='" + col + "'/>";
                            }

                            html = html + "</td>";
                        }

                        html = html + "</tr>";
                    }
                    html = html + "<tr style='height: 10px;'>";
                    html = html + "<td colspan='" + maxColumns + "' style='margin: 2px; padding: 0px;'>";
                    html = html + "</td>";
                    html = html + "</tr>";

                    html = html + "<tr>";
                    html = html + "<td colspan='" + maxColumns + "' class='text-center'>";
                    html = html + "<h4><strong>STAGE</strong></h4>";
                    html = html + "</td>";
                    html = html + "</tr>";
                    html = html + "</table>";

                    $("#seatMap").html(html);
                },
                error: function (jqXHR, textStatus, errorThrown)
                {
                    debugger;
                }
            });
        }

        function arrayContains(array, value) {
            for (var i = 0; i < array.length; i++) {
                if (array[i] === value) {
                    return true;
                }
            }

            return false;
        }
    });
</script>
}

@if (Model.VenueMetaData != null)
{
    <script>
    (function () {
        var meta = @Html.Raw(JsonConvert.SerializeObject(@Model.VenueMetaData));
            meta = meta.Data;

            var template = $("#documentdb-meta-template");
            var parent = $("#documentdb-meta-parent");

            template.hide();
            template.remove();

            var addItem = function(label, value){
                var clone = template.clone();
                clone.removeAttr("id");

                var labelField = clone.find(".documentdb-meta-label");
                labelField.text(label);

                var valueField = clone.find(".documentdb-meta-value");
                valueField.text(value);

                var removeButton = clone.find("input.documentdb-meta-remove");
                removeButton.on("click", function(){
                    var that = $(this);
                    var group = that.parents(".form-group");
                    group.slideUp("fast", function(){
                        group.remove();
                    });
                });

                parent.append(clone);
                clone.slideDown("fast");
            };

            console.log("Adding dynamic elements to the page from Document DB.");
            $.each(meta, function(key, value){
                addItem(key, value);
            });
        })();

    </script>
}